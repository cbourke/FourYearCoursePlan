-- MySQL dump 10.13  Distrib 5.5.28, for Linux (x86_64)
--
-- Host: localhost    Database: cbourke
-- ------------------------------------------------------
-- Server version	5.5.28

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Course`
--

DROP TABLE IF EXISTS `Course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Course` (
  `course_id` int(11) NOT NULL AUTO_INCREMENT,
  `subject` varchar(8) COLLATE latin1_general_cs DEFAULT NULL,
  `number` varchar(8) COLLATE latin1_general_cs DEFAULT NULL,
  `title` varchar(255) COLLATE latin1_general_cs DEFAULT NULL,
  `description` varchar(4096) COLLATE latin1_general_cs DEFAULT NULL,
  `prerequisite_text` varchar(4096) COLLATE latin1_general_cs DEFAULT NULL,
  `adviser_comment` varchar(4096) COLLATE latin1_general_cs DEFAULT NULL,
  `credit_hours` int(11) DEFAULT NULL,
  `schedule` varchar(255) COLLATE latin1_general_cs DEFAULT NULL,
  `ui_group` varchar(255) COLLATE latin1_general_cs NOT NULL DEFAULT 'Other',
  PRIMARY KEY (`course_id`)
) ENGINE=InnoDB AUTO_INCREMENT=200 DEFAULT CHARSET=latin1 COLLATE=latin1_general_cs;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Course`
--

LOCK TABLES `Course` WRITE;
/*!40000 ALTER TABLE `Course` DISABLE KEYS */;
INSERT INTO `Course` VALUES (14,'CHEM','109','General Chemistry I','Introduction to principles of chemistry for students in technical and vocational areas which require chemical training for their major field. Includes states of matter and kinetic molecular theory, atomic theory and structure, chemical bonding and molecular structure, kinetics and equilibria, acid-base and oxidation-reduction reactions.','MATH 103 or a Math Placement Test score for MATH 104 or 106.',NULL,4,'fall,spring,summer,even,odd','Misc'),(20,'CSCE','155A','Computer Science I','Introduction to problem solving with computers. Topics include problem solving methods, software development principles, computer programming, and computing in society.','Appropriate score on the CSE Placement Exam or CSCE101; MATH 103 or equivalent.','CSCE 155A is recommended for Computer Science majors; CSCE 155E is recommended for Computer Engineering majors.',3,'fall,spring,even,odd','Core CSCE Courses'),(21,'CSCE','155E','Computer Science I: Systems Engineering Focus','Introduction to problem solving with computers. Topics include problem solving methods, software development principles, computer programming, and computing in society.','Appropriate score on the CSE Placement Exam or CSCE 101; MATH 103 or equivalent.','CSCE 155A is recommended for Computer Science majors; CSCE 155E is recommended for Computer Engineering majors.',3,'fall,spring,even,odd','Core CSCE Courses'),(25,'CSCE','156','Computer Science II','Data structures, including linked lists, stacks, queues, and trees; algorithms, including searching, sorting, and recursion; programming language topics, including object-oriented programming; pointers, references, and memory management; design and implementation of a multilayer application with SQL database.','Appropriate score on the CSE Placement Exam or a grade of \"P\" or \"C\" or better in CSCE 155A, CSCE155E, CSCE 155H, CSCE 155N, or CSCE 155T; Math 106 or equivalent.',NULL,4,'fall,spring,even,odd','Core CSCE Courses'),(26,'CSCE','230','Computer Organization','Introduction to organization and structure of computer systems. Boolean logic, digital arithmetic, processor organization, machine language programming, input/output, memory organization, system support software, communication, and ethics.','A grade of \'P\' or \'C\' or better in CSCE 155A, CSCE 155E, CSCE 155H, CSCE 155N, or CSCE 155T or equivalent knowledge of a high-level programming language; parallel CSCE 230L.',NULL,4,'fall,spring,even,odd','Core CSCE Courses'),(27,'CSCE','235','Introduction to Discrete Structures','Survey of elementary discrete mathematics. Elementary graph and tree theories, set theory, relations and functions, propositional and predicate logic, methods of proof, induction, recurrence relations, principles of counting, elementary combinatorics, and asymptotic notations.','CSCE 155A, CSCE 155E, CSCE 155H, CSCE 155N, or CSCE 155T; Math 106.',NULL,3,'fall,spring,even,odd','Core CSCE Courses'),(28,'CSCE','251','Unix Programming Environment','Introduction to the Unix operating system. Unix file system. Unix tools and utilities. Shell programming.','Familiarity with at least one high-level programming language.',NULL,1,'fall,spring,even,odd','Core CSCE Courses'),(30,'CSCE','310','Data Structures and Algorithms','A review of algorithm analysis, asymptotic notation, and solving recurrence relations.  Advanced data structures and their associated algorithms, heaps, priority queues, hash tables, trees, binary search trees, and graphs.  Algorithmic techniques, divide and conquer, transform and conquer, space-time trade-offs, greedy algorithms, dynamic programming, randomization, and distributed algorithms.  Introduction to computability and NP-completeness.','Grades of \"Pass\" or \"C\" or better in CSCE 156/156H and 235/235H.',NULL,3,'fall,spring,even,odd','Core CSCE Courses'),(31,'CSCE','322','Programming Language Concepts','List-processing, string-processing, and other types of high-level programming languages. Fundamental concepts of data types, control structures, operations, and programming environments of various programming languages. Analysis, formal specification, and comparison of language features.','CSCE 156 or CSCE 311; CSCE 230.',NULL,3,'fall,even,odd','Core CSCE Courses'),(32,'CSCE','335','Digital Logic Design','Combinational and sequential logic circuits. MSI chips, programmable logic devices (PAL, ROM, PLA) used to design combinational and sequential circuits. CAD tools. LSI and PLD components and their use. Hardware design experience.','ELEC 121 or CSCE 230.',NULL,3,'fall,spring,even,odd','Core CSCE Courses'),(33,'CSCE','340','Numerical Analysis I','Algorithm formulation for the practical solution of problems, interpolation, roots of equations, differentiation, and integration. Effects of finite precision.','CSCE 155A, CSCE 155E, CSCE 155H, CSCE 155N, or CSCE 155T; Math 107.',NULL,3,'fall,spring,even,odd','Core CSCE Courses'),(34,'CSCE','351','Operating System Kernels','Design and implementation of operating system kernels. Bootstrapping and system initialization, process context switching, I/O hardware and software, DMA, I/O polling, interrupt handlers, device drivers, clock management. Substantial programming implementing or extending an instructional operating system kernel.','CSCE 230; CSCE 230L; CSCE 310 or CSCE 311.',NULL,3,'fall,even,odd','Core CSCE Courses'),(35,'CSCE','361','Software Engineering','Techniques used in the disciplined development of large software projects. Software requirements analysis and specifications, program design, coding and integration testing, and software maintenance. Software estimation techniques, design tools, and complexity metrics.','CSCE 310 or CSCE 311.',NULL,3,'fall,spring,even,odd','Core CSCE Courses'),(36,'CSCE','378','Human-Computer Interaction','Knowledge and techniques useful in the design of computing systems for human use. Includes models of HCI, human information processing characteristics important in HCI, computer system features, such as input and output devices, dialogue techniques, and information presentation, task analysis, prototyping and the iterative design cycle, user interface implementation, interface evaluation.','CSCE 156 or CSCE 311.',NULL,3,'spring,even,odd','CSCE - Software Engineering'),(38,'CSCE','413','Database Systems','Data and storage models for database systems; entity/relationship, relational, and constraint models; relational databases; relational algebra and calculus; structured query language; Logical database design: normalization; integrity; distributed data storage; concurrency; security issues. Spatial databases and geographic information systems.','CSCE 310 or CSCE 311.',NULL,3,'fall,even,odd','CSCE - Informatics'),(39,'CSCE','421','Foundations of Constraint Processing','Constraint processing for articulating and solving industrial problems such as design, scheduling, and resource allocation. The foundations of constraint satisfaction, its basic mechanisms (e.g., search, backtracking, and consistency-checking algorithms), and constraint programming languages. New directions in the field, such as strategies for decomposition and for symmetry identification.','CSCE 235; CSCE 310 or CSCE 311.',NULL,3,'fall,odd','CSCE - Artificial Intelligence'),(40,'CSCE','423','Design and Analysis of Algorithms','Mathematical preliminaries. Strategies for algorithm design, including divide-and-conquer, greedy, dynamic programming and backtracking. Mathematical analysis of algorithms. Introduction to NP-Completeness theory, including the classes P and NP, polynomial transformations and NP-complete problems.','CSCE 235; CSCE 310 or CSCE 311.',NULL,3,'spring,even,odd','CSCE - Foundations'),(41,'CSCE','424','Computational Complexity Theory','Turing machine model of computation: deterministic, nondeterministic, alternating, probabilistic. Complexity classes: Time and space bounded, deterministic, nondeterministic, probabilistic. Reductions and completeness. Complexity of counting problems. Non-uniformity. Lower bounds. Interactive proofs.','CSCE 235; CSCE 310 or CSCE 311.',NULL,3,'spring,even','CSCE - Foundations'),(42,'CSCE','425','Compiler Construction','Review of program language structures, translation, loading, execution, and storage allocation. Compilation of simple expressions and statements. Organization of a compiler including compile-time and run-time symbol tables, lexical scan, syntax scan, object code generation, error diagnostics, object code optimization techniques, and overall design.','CSCE 235; CSCE 310 or CSCE 311.',NULL,3,'fall,even,odd','CSCE - Software Engineering'),(43,'CSCE','428','Automata, Computation, and Formal Languages','Introduction to the classical theory of computer science. Finite state automata and regular languages, minimization of automata. Context free languages and pushdown automata, Turing machines and other models of computation, undecidable problems, introduction to computational complexity.','CSCE 235; CSCE 310 or CSCE 311.',NULL,3,'fall,even,odd','CSCE - Foundations'),(44,'CSCE','430','Computer Architecture','Architecture of single-processor (Von Neumann or SISD) computer systems. Evolution, design, implementation, and evaluation of state-of-the-art systems. Memory Systems, including interleaving, hierarchies, virtual memory and cache implementations; Communications and I/O, including bus architectures, arbitration, I/O processors and DMA channels; and Central Processor Architectures, including RISC and Stack machines, high-speed arithmetic, fetch/execute overlap, and parallelism in a single-processor system.','CSCE 230; CSCE 230L; CSCE 310 or CSCE 311; Prereq or Coreq: MATH/STAT 380 or ELEC 305.',NULL,3,'fall,spring,even,odd','CSCE - Networking and HPC'),(45,'CSCE','432','High-Performance Processor Architectures','High performance computing at the processor level. The underlying principles and micro-architectures of contemporary high-performance processors and systems. State-of the-art architectural approaches to exploiting instruction level parallelism for performance enhancements. Case studies of actual systems highlight real-world trade-offs and theories.','CSCE 430; MATH 314; MATH/STAT 380 or ELEC 305.',NULL,3,'fall,even','CSCE - Networking and HPC'),(46,'CSCE','434','VLSI Design','Introduction to VLSI design using metal-oxide semiconductor (MOS) devices primarily aimed at computer science majors with little or no background in the physics or circuitry of such devices. Includes design of nMOS and CMOS logic, data-path, control unit, and highly concurrent systems as well as topics in design automation.','CSCE 335 or permission.',NULL,3,'fall,odd','CSCE - Networking and HPC'),(47,'CSCE','435','Cluster and Grid Computing','Build and program clusters. Cluster construction, cluster administration, cluster programming, and grid computing.','CSCE 310 or CSCE 311 or equivalent programming experience.',NULL,3,'fall,even','CSCE - Networking and HPC'),(48,'CSCE','436','Advanced Embedded Systems','Embedded hardware design techniques; transceiver design and low-power communication techniques; sensors and distributed sampling techniques; embedded software design and embedded operating systems; driver development; embedded debugging techniques;hardware and software architectures of embedded systems; and design, development, and implementation of embedded applications.','CSCE 236; CSCE 310 or equivalent; senior/graduate standing.',NULL,3,'spring,even,odd','CSCE - Networking and HPC'),(49,'CSCE','437','File and Storage Systems','System-level and device-level topics in the design, implementation, and use of file and storage systems. Components and organization of storage systems, disk drive hardware and firmware, multi-disk systems, RAID\'s, local distributed and P2P file systems, and low-power design.','CSCE 351 or 451/851; CSCE 430/830.',NULL,3,'fall,even','CSCE - Networking and HPC'),(50,'CSCE','438','Sensor Networks','Basics of sensor networks; theoretical and practical insight into wireless sensor networks, including low-power hardware and wireless communication principles; networking in wireless sensor networks; and applications of sensor networks, such as multimedia, underwater, and underground. A group project that provides hands-on interaction with a wireless sensor network testbed.','CSCE230 and CSCE310 or equivalent; senior or graduate standing or instructor permission.',NULL,3,'spring,even','CSCE - Networking and HPC'),(51,'CSCE','439','Robotics','Fundamental theory and algorithms for real world robot systems.  Design and build a robot platform and implement algorithms in C++ or other high level languages.  Topics include: open and closed loop control, reactive control, localization, navigation, path planning, obstacle avoidance, dynamics, kinematics, manipulation and grasping, sensing, robot vision processing, and data fusion.','CSCE236 or ELEC222 and CSCE 310/311 or equivalent programming experience, MATH 314, senior/graduate standing, or instructor permission.',NULL,3,'fall,odd','CSCE - Networking and HPC'),(54,'CSCE','451','Operating Systems Principles','Organization and structure of operating systems. Control, communication, and synchronization of concurrent processes. Processor and job scheduling. Memory organization and management including paging, segmentation, and virtual memory. Resource management. Deadlock avoidance, detection, recovery. File system concepts and structure. Protection and security. Substantial programming.','CSCE 230; CSCE 230L; CSCE 310 or CSCE 311.',NULL,3,'spring,even,odd','CSCE - Other Electives'),(55,'CSCE','455','Distributed Operating Systems','Organization and structure of distributed operating systems. Control, communication and synchronization of concurrent processes in the context of distributed systems. Processor allocation and scheduling. Deadlock avoidance, detection, recovery in distributed systems. Fault tolerance. Distributed file system concepts and structure.','CSCE 451/851.',NULL,3,'spring,odd','CSCE - Networking and HPC'),(56,'CSCE','456','Parallel Programming','Introduction to the fundamentals of parallel computation and applied algorithm design. Methods and models of modern parallel computation; general techniques for designing efficient parallel algorithms for distributed and shared memory multiprocessor machines; principles and practice in programming an existing parallel machine.','CSCE 310 or CSCE 311 or equivalent programming experience.',NULL,3,'fall,even','CSCE - Networking and HPC'),(57,'CSCE','457','Systems Administration','Introduction to basic concepts of system administration. Operating systems and networking overview. User and resource management. Networking, systems and internet related security. System services and common applications, web services, database services, and mail servers. Basic scripting in shell, Perl, and Expect. Systems administration on UNIX® platform.','CSCE 310 or CSCE 311 or equivalent programming experience.',NULL,3,'fall,spring,even,odd','CSCE - Other Electives'),(59,'CSCE','462','Communication Networks','Introduction to the architecture of communication networks and the rudiments of performance modeling. Circuit switching, packet switching, hybrid switching, protocols, local and metro area networks, wide area networks and the Internet, elements of performance modeling, and network programming. Network security, asynchronous transfer mode (ATM), optical, wireless, cellular, and satellite networks, and their performance studies.','CSCE 230; CSCE 230L; CSCE 310 or CSCE 311; MATH/STAT 380 or ELEC 305.',NULL,3,'spring,even,odd','CSCE - Networking and HPC'),(61,'CSCE','464','Internet Systems and Programming','Paradigms, systems, and languages for Internet applications. Client-side amd server-side programming, object-based and event-based distributed programmming, and multi-tier applications. Coverage of specific technologies varies.','CSCE 310 or CSCE 311 or equivalent programming experience.',NULL,3,'','CSCE - Software Engineering'),(62,'CSCE','467','Software Quality','Initial and ongoing software analysis, including metrics, requirements, correctness, performance, testing and validation. Frameworks and methods for software quality. Benchmarks and testing, processes for quality assurance, performance and quality models, software quality tools, testable designs and automated testing.','CSCE 310 or CSCE 311.',NULL,3,'','CSCE - Other Electives'),(63,'CSCE','470','Computer Graphics','Display and recording devices; incremental plotters; point, vector, and character generation; grey scale displays, digitizers and scanners, digital image storage; interactive and passive graphics; pattern recognition; data structures and graphics software; the mathematics of three dimensions; homogeneous coordinates; projections and the hidden-line problem.','CSCE 310 or CSCE 311; MATH 314.',NULL,3,'spring,even,odd','CSCE - Informatics'),(64,'CSCE','471','Introduction to Bioinformatics','Fundamentals and trends in bioinformatics. Scoring matrices and pairwise sequence alignments via dynamic programming, BLAST, and other heuristics. Multiple sequence alignments. Applications of machine learning methods such as hidden Markov models and support vector machines to biological problems such as family modeling and phylogeny.','CSCE 310 or CSCE 311; MATH/STAT 380.',NULL,3,'spring,even','CSCE - Informatics'),(65,'CSCE','472','Digital Image Processing','Digital imaging systems, digital image processing, and low-level computer vision. Data structures, algorithms, and system analysis and modeling. Digital image formation and presentation, image statistics and descriptions, operations and transforms, and system simulation. Applications include system design, restoration and enhancement, reconstruction and geometric manipulation, compression, and low-level analysis for computer vision.','CSCE 156 or CSCE 311 or equivalent programming experience.',NULL,3,'fall,even,odd','CSCE - Informatics'),(66,'CSCE','473','Computer Vision','High-level processing for image understanding and high-level vision. Data structures, algorithms, and modeling. Low-level representation, basic pattern-recognition and image-analysis techniques, segmentation, color, texture and motion analysis, and representation of 2-D and 3-D shape. Applications for content-based image retrieval, digital libraries, and interpretation of satellite imagery.','CSCE 156 or CSCE 311 or equivalent programming experience.',NULL,3,'spring,odd','CSCE - Informatics'),(67,'CSCE','474','Introduction to Data Mining','Data mining and knowledge discovery methods and their application to real-world problems. Algorithmic and systems issues. Statistical foundations, association discovery, classification, prediction, clustering, spatial data mining and advanced techniques.','CSCE 310 or CSCE 311; MATH/STAT 380.',NULL,3,'fall,odd','CSCE - Informatics'),(68,'CSCE','475','Multiagent Systems','Distributed problem solving and planning, search algorithms for agents, distributed rational decision making, learning multiagent systems, computational organization theory, formal methods in Distributed Artificial Intelligence, multiagent negotiations, emergent behaviors (such as ants and swarms), and Robocup technologies and real-time coalition formation.','CSCE 156 or CSCE 311.',NULL,3,'fall,even','CSCE - Artificial Intelligence'),(69,'CSCE','476','Introduction to Artificial Intelligence','Introduction to basic principles, techniques, and tools now being used in the area of machine intelligence. Languages for AI programming introduced with emphasis on LISP. Lecture topics include problem solving, search, game playing, knowledge representation, expert systems, and applications.','CSCE 310 or CSCE 311.',NULL,3,'spring,even,odd','CSCE - Artificial Intelligence'),(70,'CSCE','477','Cryptography and Computer Security','Introductory course on cryptography and computer security. Topics: classical cryptography (substitution, Vigenere, Hill and permutation ciphers, and the one-time pad); Block ciphers and stream ciphers; The Data Encryption Standard; Public-key cryptography, including RSA and El-Gamal systems; Signature schemes, including the Digital Signature Standard; Key exchange, key management and identification protocols.','CSCE 310 or CSCE 311; MATH 314.',NULL,3,'fall,even,odd','CSCE - Foundations'),(71,'CSCE','478','Introduction to Machine Learning','Introduction to the fundamentals and current trends in machine learning. Possible applications for game playing, text categorization, speech recognition, automatic system control, date mining, computational biology, and robotics. Theoretical and empirical analyses of decision trees, artificial neural networks, Bayesian classifiers, genetic algorithms, instance-based classifiers and reinforcement learning.','CSCE 310 or CSCE 311.',NULL,3,'fall,even','CSCE - Artificial Intelligence'),(72,'CSCE','479','Introduction to Neural Networks','Introduction to the concepts, design and application of connection-based computing begins by simulating neural networks, focusing on competing alternative network architectures, including sparse distributed memories, Hopfield networks, and the multilayered feed-forward systems. Construction and improvement of algorithms used for training of neural networks addressed to reduce training time and improve generalization. Algorithms for training and synthesizing effective networks implemented in high level language programs running on conventional computers. Emphasis on methods for synthesizing and simplifying network architectures for improved generalization. Application areas include: pattern recognition, computer vision, robotics medical diagnosis, weather and economic forecasting.','CSCE 310 or CSCE 311.',NULL,3,'','CSCE - Other Electives'),(73,'CSCE','486','Computer Science Professional Development','Preparation for the senior design project. Professional practice through familiarity with current tools, resources, and technologies. Professional standards, practices and ethics, and the oral and written report styles used specifically in the field of computer science.','CSCE 361.',NULL,2,'fall,spring,even,odd','CSCE - Other Electives'),(74,'CSCE','487','Computer Science Design Project','A substantial computer science project requiring design, planning and scheduling, teamwork, written and oral communications, and the integration and application of technical and analytical aspects of computer science and software engineering.','CSCE 486 (taken exactly one semester previous).',NULL,3,'fall,spring,even,odd','CSCE - Other Electives'),(75,'CSCE','488','Computer Engineering Professional Development','Professional practice through familiarity and practice with current tools, resources, and technologies; professional standards, practices, and ethics; and oral and written report styles used in the computer engineering field.','CSCE 236; CSCE 351; formal admission to the College of Engineering; prereq or coreq: JGEN 300.',NULL,2,'fall,spring,even,odd','CSCE - Other Electives'),(76,'CSCE','489','Computer Engineering Senior Design Project','A substantial computer engineering project requiring hardware-software co-design, planning and scheduling, teamwork, written and oral communications, and the integration and application of technical and analytical aspects of computer science and computer engineering.','CSCE 488 (taken exactly one semester previous).',NULL,3,'fall,spring,even,odd','CSCE - Other Electives'),(85,'ELEC','215','Electronics and Circuits I','Introduction to electrical engineering circuit theory. Kirchhoff\'s laws and circuit analysis theorems applied to steady state DC resistive circuits. Analysis of transient RLC and sinusoidal steady-state circuits. Modern computer methods employed.','Prerequisite or parallel: MATH 208.',NULL,3,'fall,spring,even,odd','ELEC Courses'),(86,'ELEC','216','Electronics and Circuits II','Steady state power calculations for sinusoidal single-phase and balanced three-phase circuits. Mutual inductance. Frequency response. Introduction to fundamentals of semiconductor theory and their application to p-n junction devices. Kirchhoff\'s laws and circuit analysis theorems applied to steady state diode circuits. Modern computer methods employed.','ELEC 215 with a grade of \"C\" or better. Prerequisite or parallel: MATH 221 or 221H.',NULL,3,'fall,spring,even,odd','ELEC Courses'),(89,'ELEC','235','Introductory Electrical Laboratory I','Laboratory accompanying ELEC 215.','Prerequisite or parallel: ELEC 215.',NULL,1,'fall,spring,even,odd','ELEC Courses'),(90,'ELEC','236','Introductory Electrical Laboratory II','Laboratory accompanying ELEC 216.','ELEC 235; Prerequisite or parallel: ELEC 216.',NULL,1,'fall,spring,even,odd','ELEC Courses'),(92,'ELEC','304','Signals and Systems I','Mathematical modeling of physical systems and signals. Representation of signals in terms of basis functions. Fourier series expansions, Fourier Transforms, Laplace and z-Transforms. Input-output relations, convolution. Transfer functions. Bode plots. Poles/zeros and s- and z-plane methods. Applications.','ELEC 216 with a grade of \"C\" or better; MATH 221 or 221H.',NULL,3,'fall,spring,even,odd','ELEC Courses'),(93,'ELEC','305','Probability Theory and Introduction to Random Processes','Random experiment model, random variables, functions of random variables, and introduction to random processes.','ELEC 304.',NULL,3,'fall,spring,even,odd','ELEC Courses'),(96,'ELEC','316','Electronics and Circuits III','Kirchhoff\'s laws and circuit analysis theorems applied to steady state transistor circuits. Frequency response of filters and amplifiers. Basic power amplifier types. Advanced operational amplifier circuits. Introduction to the fundamentals of semiconductor theory and their application to p-n junction and field devices.','ELEC 216 with a grade of \'C\' or better.',NULL,3,'fall,spring,even,odd','ELEC Courses'),(144,'JGEN','200','Technical Communication I','Introduction to written and oral communication and document design principles and strategies as applied in the sciences and technology. Communications for various audiences and/or purposes and/or situations.','',NULL,3,'fall,spring,even,odd','Misc'),(145,'JGEN','300','Technical Communication II','Interdisciplinary approach to written and oral communications. Application of course work from the major to issues in science and technology. Integrates various perspectives through collaborative learning.','',NULL,3,'fall,spring,summer,even,odd','Misc'),(149,'MATH','103','College Algebra and Trigonometry','First and second degree equations and inequalities, absolute value, functions, polynomial and rational functions, exponential and logarithmic functions, trigonometric functions and identities, laws of sines and cosines, applications, polar coordinates, systems of equations, graphing, conic sections.','Appropriate placement exam score, one year high school geometry, and two years high school algebra.',NULL,5,'fall,spring,even,odd','MATH Courses'),(150,'MATH','106','Analytic Geometry and Calculus I','Functions of one variable, limits, differentiation, exponential, trigonometric and inverse trigonometric functions, maximum-minimum, and basic integration theory (Riemann sums) with some applications.','One year high school geometry; two years algebra and one year precalculus-trig in high school, or MATH 102 or 103 or equivalent.',NULL,5,'fall,spring,summer,even,odd','MATH Courses'),(151,'MATH','107','Analytic Geometry and Calculus II','Integration theory; techniques of integration; applications of definite integrals; basics of ordinary differential equations; series, Taylor series.','A grade of P, C or better in MATH 106.',NULL,4,'fall,spring,summer,even,odd','MATH Courses'),(152,'MATH','208','Analytic Geometry and Calculus III','Vectors and surfaces, parametric equations and motion, functions of several variables, partial differentiation, maximum-minimum, Lagrange multipliers, multiple integration, vector fields, path integrals, Green\'s Theorem, and applications.','A grade of P, C or better in MATH 107.','Math 208 is required for Computer Engineering majors.  For Computer Science majors, taking Math 208 gives you an automatic Math Minor.',4,'fall,spring,summer,even,odd','MATH Courses'),(153,'MATH','221','Differential Equations','First- and second-order methods for ordinary differential equations including: separable, linear, Laplace transforms, linear systems, and some applications.','A grade of P or C or better in MATH 208/208H.',NULL,3,'fall,spring,summer,even,odd','MATH Courses'),(154,'MATH','314','Applied Linear Algebra (Matrix Theory)','Fundamental concepts of linear algebra from the point of view of matrix manipulation with emphasis on concepts that are most important in applications. Includes solving systems of linear equations, vector spaces, inner products, determinants, eigenvalues, similarity of matrices, and Jordan Canonical Form.','',NULL,3,'fall,spring,summer,even,odd','MATH Courses'),(162,'PHYS','211','General Physics I','Calculus-based course intended for students in engineering and the physical sciences. Mechanics, fluids, wave motion, and heat.','One year high school physics or PHYS 141 or 141H or 151 or permission; MATH 106 or parallel.',NULL,4,'fall,spring,summer,even,odd','Misc'),(163,'PHYS','212','General Physics II','Continuation of PHYS 211. Electricity, magnetism, and optics.','One year high school physics or PHYS 211 or 211H or permission; MATH 107 or parallel.',NULL,4,'fall,spring,summer,even,odd','Misc'),(168,'STAT','380','Statistics and Applications','Probability calculus; random variables, their probability distributions and expected values; t, F and chi-square sampling distributions; estimation; testing of hypothesis; and regression analysis with applications.','MATH 107 or 107H.',NULL,3,'fall,spring,summer,even,odd','MATH Courses'),(169,'ACE','1','Written Communication','Written Communication Learning Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(170,'ACE','2','Oral Communication','Oral Communication Learning Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(171,'ACE','5','Humanities/History','Humanities/History Learning Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(172,'ACE','6','Social Sciences','SocialSciences Learning Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(173,'ACE','7','Fine Arts','Fine Arts Learning Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(174,'ACE','9','Human Diversity','Human Diversity Outcome',NULL,'Achievement-Centered Education (ACE) courses are general education requirements.  Some ACE requirements are taken care of by major requirements. Computer Science majors must take an ACE course in areas 1, 2, 5, 6, 7, and 9.  Computer Engineering majors must take an ACE course in areas 5, 6, 7, and 9.',3,'fall,spring,summer,even,odd','Placeholders'),(175,'CDR','A','Written Communication','Computer Science Majors must take another ACE 1 (Written Communication)',NULL,NULL,3,'fall,spring,summer,even,odd','Placeholders'),(176,'CDR','C','Humanities/History','Computer Science Majors: you may choose any course from CLAS, ENGL, HIST, PHIL, RELG',NULL,NULL,3,'fall,spring,summer,even,odd','Placeholders'),(177,'CDR','D','Social Sciences','Computer Science Majors: you may choose any course from ANTH, COMM, GEOG, POLS, PSYC, SOCI',NULL,NULL,3,'fall,spring,summer,even,odd','Placeholders'),(178,'LANG','101','Foreign Language I','First Semester Foreign Language, UNL offers Spanish, French, German, Russian, Czech, Chinese and Japanese',NULL,NULL,5,'fall,spring,summer,even,odd','Placeholders'),(179,'LANG','102','Foreign Language II','Second Semester Foreign Language, UNL offers Spanish, French, German, Russian, Czech, Chinese and Japanese',NULL,NULL,5,'fall,spring,summer,even,odd','Placeholders'),(180,'LANG','201','Foreign Language III','Third Semester Foreign Language, UNL offers Spanish, French, German, Russian, Czech, Chinese and Japanese',NULL,NULL,3,'fall,spring,summer,even,odd','Placeholders'),(181,'LANG','202','Foreign Language IV','Fourth Semester Foreign Language, UNL offers Spanish, French, German, Russian, Czech, Chinese and Japanese',NULL,NULL,3,'fall,spring,summer,even,odd','Placeholders'),(182,'ENGR','10','Freshman Engineering Seminar','Overview of the engineering field as well as major specific information.  Information will be provided to help with transitional needs to UNL and the college of engineering (time management, study skills, and resources), involvement opportunities (student organizations, research, and study abroad), tours of engineering facilities for experiential learning, and interactive learning to increase business knowledge and skills.',NULL,NULL,0,'fall,even,odd','Misc'),(183,'ENGR','20','Sophomore Engineering Seminar','Overview of career opportunities in engineering and construction management. Emphasizes internships, cooperative education and career placement.',NULL,NULL,0,'fall,even,odd','Misc'),(184,'CSCE','236','Embedded Systems','Introduction to designing, interfacing, configuring, and programming embedded systems. Configure simple embedded microprocessor systems, control peripherals, write device drivers in a high-level language, set up embedded and real-time operating systems, and develop applications for embedded systems.','CSCE 230',NULL,3,'spring,even,odd','Core CSCE Courses'),(185,'NSCI','001','Natural Science 1',NULL,NULL,'Computer Science majors must take 3 natural science courses, two of which must have a lab and be in the same track (Chemistry, Physics, etc.).  Computer Engineering majors must take PHYS 211, PHYS 212, and either PHYS 213/223 or CHEM 109.',4,'fall,spring,even,odd','Placeholders'),(186,'NSCI','002','Natural Science 3',NULL,NULL,'Computer Science majors must take 3 natural science courses, two of which must have a lab and be in the same track (Chemistry, Physics, etc.).  Computer Engineering majors must take PHYS 211, PHYS 212, and either PHYS 213/223 or CHEM 109.',4,'fall,spring,even,odd','Placeholders'),(187,'NSCI','003','Natural Science 3',NULL,NULL,'Computer Science majors must take 3 natural science courses, two of which must have a lab and be in the same track (Chemistry, Physics, etc.).  Computer Engineering majors must take PHYS 211, PHYS 212, and either PHYS 213/223 or CHEM 109.',4,'fall,spring,even,odd','Placeholders'),(188,'CSCE','ELC1','Computer Science Elective 1',NULL,NULL,'Computer Science majors must take 3 CSCE technical electives.  Computer Engineering majors must take 6 CSCE or ELEC technical electives, 3 of which must be 400-level.',3,'fall,spring,even,odd','Placeholders'),(189,'CSCE','ELC2','Computer Science Elective 2',NULL,NULL,'Computer Science majors must take 3 CSCE technical electives.  Computer Engineering majors must take 6 CSCE or ELEC technical electives, 3 of which must be 400-level.',3,'fall,spring,even,odd','Placeholders'),(190,'CSCE','ELC3','Computer Science Elective 3',NULL,NULL,'Computer Science majors must take 3 CSCE technical electives.  Computer Engineering majors must take 6 CSCE or ELEC technical electives, 3 of which must be 400-level.',3,'fall,spring,even,odd','Placeholders'),(191,'CSCE','ELC4','Computer Science Elective 4',NULL,NULL,'Computer Science majors must take 3 CSCE technical electives.  Computer Engineering majors must take 6 CSCE or ELEC technical electives, 3 of which must be 400-level.',3,'fall,spring,even,odd','Placeholders'),(192,'CSCE','ELC5','Computer Science Elective 5',NULL,NULL,'Computer Science majors must take 3 CSCE technical electives.  Computer Engineering majors must take 6 CSCE or ELEC technical electives, 3 of which must be 400-level.',3,'fall,spring,even,odd','Placeholders'),(194,'FREE','ELC1','Free Elective 1',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders'),(195,'FREE','ELC2','Free Elective 2',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders'),(196,'FREE','ELC3','Free Elective 3',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders'),(197,'FREE','ELC4','Free Elective 4',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders'),(198,'FREE','ELC5','Free Elective 5',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders'),(199,'FREE','ELC6','Free Elective 6',NULL,NULL,'Computer Science majors must take a total of 120 credit hours to graduate.  At least 102 credit hours come from major requirements leaving up to 18 credit hours as free electives.  Many students will gain these hours through their foreign language requirements, a second minor (Physics is common), a Math double-major, or other CSCE technical electives',3,'fall,spring,even,odd','Placeholders');
/*!40000 ALTER TABLE `Course` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2013-07-01 13:23:57
